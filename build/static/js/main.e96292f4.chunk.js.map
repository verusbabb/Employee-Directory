{"version":3,"sources":["components/Tablebody.js","components/Table.js","components/Form.js","Utils/API.js","App.js","index.js"],"names":["Tablebody","props","className","src","picture","nameFirst","nameLast","email","dob","Table","employeeResult","sortBy","scope","onClick","map","employee","index","thumbnail","name","first","last","moment","date","format","Form","search","handleInputChange","type","id","onChange","value","placeholder","axios","get","App","useState","setEmployeeResult","setSearch","gettingData","setGettingData","dataSort","setDataSort","useEffect","getEmployees","console","log","API","then","res","data","results","event","target","filter","toUpperCase","includes","key","prevData","sort","reverse","a","b","compareBy","ReactDOM","render","document","getElementById"],"mappings":"4MAiBeA,MAff,SAAmBC,GACjB,OACE,uBAAOC,UAAU,cAAjB,SACE,qBAAIA,UAAU,WAAd,UACE,6BACE,qBAAKC,IAAKF,EAAMG,YAElB,6BAAKH,EAAMI,UAAY,IAAMJ,EAAMK,WACnC,6BAAKL,EAAMM,QACX,6BAAKN,EAAMO,Y,iBC0BJC,MAjCf,YAA4C,IAA3BC,EAA0B,EAA1BA,eAAgBC,EAAU,EAAVA,OAC/B,OACE,qBAAKT,UAAU,mBAAf,SACE,wBAAOA,UAAU,qCAAjB,UACE,uBAAOA,UAAU,UAAjB,SACE,+BACE,oBAAIU,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAMC,QAAS,kBAAMF,EAAO,SAAtC,kBAGA,oBAAIC,MAAM,MAAMC,QAAS,kBAAMF,EAAO,UAAtC,mBAGA,oBAAIC,MAAM,MAAMC,QAAS,kBAAMF,EAAO,aAAtC,sBAKHD,EAAeI,KAAI,SAACC,EAAUC,GAAX,OAClB,cAAC,EAAD,CAEEZ,QAASW,EAASX,QAAQa,UAC1BZ,UAAWU,EAASG,KAAKC,MACzBb,SAAUS,EAASG,KAAKE,KACxBb,MAAOQ,EAASR,MAChBC,IAAKa,IAAON,EAASP,IAAIc,MAAMC,OAAO,MALjCP,YCtBF,SAASQ,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,kBACrC,OACE,8BACE,qBAAKxB,UAAU,mBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,uBACEgB,KAAK,SACLS,KAAK,OACLzB,UAAU,eACV0B,GAAG,SACHC,SAAUH,EACVI,MAAOL,EACPM,YAAY,qC,qBCVT,EACO,WAClB,OAAOC,IAAMC,IAAI,0CCkENC,MAnEf,WAAgB,IAAD,EAC+BC,mBAAS,IADxC,mBACNzB,EADM,KACU0B,EADV,OAEeD,mBAAS,IAFxB,mBAENV,EAFM,KAEEY,EAFF,OAGyBF,oBAAS,GAHlC,mBAGNG,EAHM,KAGOC,EAHP,OAImBJ,oBAAS,GAJ5B,mBAINK,EAJM,KAIIC,EAJJ,KAUbC,qBAAU,WACRC,IACAC,QAAQC,IAAInC,GACZ6B,GAAe,GAEXD,GACFK,MAED,IAEH,IAAMA,EAAe,WACnBG,IAAyBC,MAAK,SAACC,GAC7BZ,EAAkBY,EAAIC,KAAKC,aAmB/B,OACE,qBAAKhD,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,6GAKF,cAACsB,EAAD,CAAMC,OAAQA,EAAQC,kBA7CF,SAACyB,GACzBd,EAAUc,EAAMC,OAAOtB,UA6CnB,cAAC,EAAD,CACEpB,eAAgBA,EAAe2C,QAAO,SAAUtC,GAC9C,OAAOA,EAASG,KAAKC,MAClBmC,cACAC,SAAS9B,EAAO6B,kBAErB3C,OAxBO,SAAC6C,GAEVpB,EADJI,EACsB,SAACiB,GAAD,mBAAkBA,EAASC,OAAOC,YAClC,SAACF,GAAD,mBAAkBA,EAASC,KAXjC,SAACF,GACjB,OAAO,SAAUI,EAAGC,GAClB,OAAID,EAAEJ,GAAOK,EAAEL,IAAc,EACzBI,EAAEJ,GAAOK,EAAEL,GAAa,EACrB,GAO6CM,CAAUN,OAChEf,GAAaD,Y,YCrCjBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e96292f4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Tablebody(props) {\n  return (\n    <tbody className=\"table-hover\">\n      <tr className=\"bg-light\">\n        <td>\n          <img src={props.picture}></img>\n        </td>\n        <td>{props.nameFirst + \" \" + props.nameLast}</td>\n        <td>{props.email}</td>\n        <td>{props.dob}</td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default Tablebody;\n\n//testing\n","import React from \"react\";\nimport Tablebody from \"./Tablebody\";\nimport moment from \"moment\";\n\nfunction Table({ employeeResult, sortBy }) {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-striped table-bordered\">\n        <thead className=\"bg-info\">\n          <tr>\n            <th scope=\"col\">Picture</th>\n            <th scope=\"col\" onClick={() => sortBy(\"name\")}>\n              Name\n            </th>\n            <th scope=\"col\" onClick={() => sortBy(\"email\")}>\n              Email\n            </th>\n            <th scope=\"col\" onClick={() => sortBy(\"dob.date\")}>\n              DOB\n            </th>\n          </tr>\n        </thead>\n        {employeeResult.map((employee, index) => (\n          <Tablebody\n            key={index}\n            picture={employee.picture.thumbnail}\n            nameFirst={employee.name.first}\n            nameLast={employee.name.last}\n            email={employee.email}\n            dob={moment(employee.dob.date).format(\"L\")}\n          />\n        ))}\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\n\nexport default function Form({ search, handleInputChange }) {\n  return (\n    <div>\n      <div className=\"input-group mb-4\">\n        <div className=\"col-sm-4\">\n          <input\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"search\"\n            onChange={handleInputChange}\n            value={search}\n            placeholder=\"Search employee first name\"\n          ></input>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\n// Object containing function to get random employee data; exported for use in Table.js\n\nexport default {\n  getRandomEmployees: function () {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"./components/Table\";\nimport Form from \"./components/Form\";\nimport API from \"./Utils/API\";\n\nfunction App() {\n  const [employeeResult, setEmployeeResult] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [gettingData, setGettingData] = useState(true);\n  const [dataSort, setDataSort] = useState(false);\n\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    getEmployees();\n    console.log(employeeResult);\n    setGettingData(false);\n\n    if (gettingData) {\n      getEmployees();\n    }\n  }, []);\n\n  const getEmployees = () => {\n    API.getRandomEmployees().then((res) => {\n      setEmployeeResult(res.data.results);\n    });\n  };\n\n  const compareBy = (key) => {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  };\n\n  const sortBy = (key) => {\n    dataSort\n      ? setEmployeeResult((prevData) => [...prevData.sort().reverse()])\n      : setEmployeeResult((prevData) => [...prevData.sort(compareBy(key))]);\n    setDataSort(!dataSort);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"container\">\n        <div className=\"jumbotron text-center bg-info\">\n          <h1 className=\"display-4\">Employee Directory</h1>\n          <p className=\"lead\">\n            View a list of all employees, sort employees by name, or search for\n            employees by first name.\n          </p>\n        </div>\n        <Form search={search} handleInputChange={handleInputChange} />\n        <Table\n          employeeResult={employeeResult.filter(function (employee) {\n            return employee.name.first\n              .toUpperCase()\n              .includes(search.toUpperCase());\n          })}\n          sortBy={sortBy}\n          // sortEmail={sortByEmail}\n          // sortDOB={sortByDOB}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}